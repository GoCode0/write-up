from math import gcd

n1 = 0xDA5A25E488A47DE3D56C0DEDA55BDF9AF37D65FFE65CF1FD9FD354AB2CA2362FDFB8ED4381167647C5E2A070C5F77400EA2D595FFF32BDF69C3E67C85654A24E210D014A2B6617D95CEA5B2C62CA934D5426F9B290F660F7DCD5C25B44A56E66EE91ACE7DD7F232D7F8D60B524BDFFE3B8C0FF4CE800D61B4E49A1868FEAEF92B1CE9F1DC26F6281BF3E97FA6F4E002119E4A1F89F80783D513990EADAA239E6ED804CD631B69B8C0E466CFBCDA894B1C45ABDB5382740D2494DA5FBD24B111E709CEACCBFC47C71FB9B7DF10936864623C14A04F7D93F3B5F9003347FFBF64DE44064CF0ACDAC0B7CCF47181E6BE636FE1705CC5DD03B9F3BC9920E74CCB8959F79CE4156232F4EFB803B9493304D6AD187937ACD4807F869F7BA46D54042707FFAC32E99061324910168C363ACAA9374698EE312FCFBB7770F77AEF6F2D851ED181270A7F774C3740205EFDB12E8D8CC9D42365282C6EEE2CEF69546756B31E68383DECA00A62093B92708C3BB7CCA0844AD9A17BC90B09B22A1C79CD1DB86A11FAEC175390FBAA2E2D4BDECCAA6C7B13C1DC5C3A37C808FC4251FB690059A992B10DF77B954BCE60C9B7FDA889800EE58F2502E5A41265D00E3CCE8027905222395E7EC920E929AF63967F676D4AD5B63ED241A04532448D4AE1DD5AC1533F763D56DB5716CE6025A89AD9656E8B70A4AC6F63C57A9B0C9C2526AF9E56847
n2 = 0xB1CF59A37A81DA7854EFFDB8C9FE9F2AABEC72FEC3D62324B24D9DB7DE01A3099F79E01219EC35DB4C58C4C6A1B09865349E37B218F48CA9EC161AF84ED32AD5E7B096079DF567991C1B9E03A419B00D3FF6350849C1E8C0753E2BCD54BDD33D81D5D564EE721A6BE80921B4CF220AA9F05F53D98106E59DE9ED327899FB63386AB95F106E5CD60F4F578096B0E0C217928BE5CF6BBE10C6633F2DC320D224AEBF51FE34352738AD0B6E0873C6C3DF5E49EF218F02688F1478D50A55A44D875BFC4799754C2F6135FF168C9C8E225EBF84850A01CA7AE789D425824663FD2479ECC7AD71E1BE674FA59A42ACBAFA48EB43B181957145ED996739FFACE0A2F83432C0E9D64BCC5A68033AD8E7DF8191B1C0C157007544C8D1AE3A4B662D4B8FAE3549B2A63A076D62E34847DD1AE307B3741A5CE1B5727A2586448FFFA1BB5FF019EA7230CC61DDDA1663B2E165322A02A13EF02B9183704B083C3C7E9A9919C37693BE62A8B4F592041605AD046AC32D0DBFC0D312709D881DD164E2DD130791BA70282FDBBA4391D78CD856AD237F73115DD1A0DD12EFE336E580C0B19C9A4B61F5119A0C1BAEC7C0E313EB65C7405DE5B9BC4C6464A08547887F1C255C1E5ABE8989BF57D94C20E1B50151F4FA796EE46E69BA77C289641EE560B80F2665BD8292C5DD25304BE9246E0FA38133DDD543FB26582DE80A8A0077A7ED636A2DC3

p = gcd(n1, n2)
assert p != 1
q = n2 // p
assert p * q == n2

e = 0x10001
d = pow(e, -1, (p - 1) * (q - 1))
u = pow(p, -1, q)

print(f"{n2 = }")
print(f"{p = }")
print(f"{q = }")
print(f"{d = }")
print(f"{e = }")
print(f"{u = }")

assert p * q == n2
